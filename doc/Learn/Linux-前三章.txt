Linux

9.11		第一天
1.组成：Linux系统内核，系统级应用程序

2.VMware WorkStation虚拟机
(1).设置-网络-高级网络设置-更多网络适配器(VMnet1、VMnet8)
win+R  -> ncpa.cpl
(2).创建虚拟机
典型，操作系统文件，简易安装，虚拟硬盘

3.连接linux系统
FinalShell安装
linux命令行 -> ifconfig，IP地址inet...

4.虚拟机快照



9.12		第二天
1.目录结构
只有一个顶级目录
根目录 /
	bin
	boot
	dev
	etc
	home
	root
	run
	sbin
	tmp
	usr
		local:	/usr/local/hello.txt
	var

2.命令行程序
命令、字符化反馈
command [-options] [parameter]
命令		行为细节		参数

	ls -l /home/itheima	以列表形式显示/home/itheima目录内的内容；
	cp -r teat1 test2	复制文件夹1到文件夹2

3.ls命令
ls [-a -l -h] [Linux路径]

List Show
ls：以平铺形式显示当前目录下的内容
	命令行默认打开/home/username，目录
-a：all，展示全部文件
	.xxx为隐藏文件
-l：竖向排列及更多信息
	ls -l -a	=	ls -la	=	ls -al
-h：显示文件大小，(与-l一起使用
	ls -lh
参数：查看指定路径内容，之后以path显示
	ls /

4.cd命令
cd [path]

Change Directory：切换目录
不写path回到home目录

5.pwd命令
pwd

Print Work Directory：打印当前目录

6.相对路径、绝对路径、特殊路径符

/home/itheima：
绝对路径：	cd /home/itheima/Desktop
相对路径:	cd Desktop

特殊路径符
.	：当前目录
	cd ./Desktop
..	：上级目录
	cd ..
	cd ../..
~	：home目录
	cd ~
	cd ~/Desktop

7.mkdir命令
mkdir [-p] path

Make Diretory：新建文件夹
	支持特殊路径符
	mkdir test
-p：自动创建不存在的父目录/多级目录
	Ctrl+L：清空命令行

创建仅在home目录内，否则需要考虑权限

8.文件操作命令
(1).touch命令
touch path.xxx

创建文件
	touch test.txt

区分：	文件夹：深色		-l 时前缀为 d
		文件：浅色		-l 时前缀为 -

(2).cat命令
cat path.xxx

查看文件
	cat test.txt
全部查看

(3).more命令
more path.xxx

查看文件
	cat test.txt
分页查看
	空格：翻页
	Q：退出查看

9.文件操作命令2
(1).cp
cp [-r] path1 path2

Copy：复制文件或文件夹
-r：复制文件夹时，使用
path1：被复制的
path2：复制路径
	cp test.txt test2.txt
	cp -r Test Test2

(2).mv
mv path1 path2

Move：移动
path1：要被移动的
path2：移动路径，若路径不存在则改名
	mv test.txt Desktop/
	mv test.txt text3.txt
	mv Test Desktop/
	
(3).rm
rm [-r -f] path1 path2 ... pathn

Remove：删除文件，文件夹
-r：用于删除文件夹
-f：强制删除会有提示，只有root用户能删除
	rm test2.txt
	rm -r Test2
	rm -r test.txt test2.txt Test Test2

rm 支持通配符，模糊匹配
	*：表示通配符，任意内容
	test*：以test开头的内容
	*test：以test结尾的内容
	*test*：包含test的内容
		rm	-r *test

su - root ->密码123456
exit：退回普通用户

10.查找命令
(1).which
which 要查找的命令
	只能查找命令的相关文件

(2).find
find 起始路径 -name "被查找的文件名"

	find / -name "test"
		可以使用通配符

find 起始路径 -size +|-n[kMG]

+、-：表示大于小于
n：表示大小数字
kMG：大小单位
	find / -size -10k
	find / -size +100M 

Ctrl+C：强制中断

11.grep,wc,管道
(1).grep
grep [-n] 关键字 path

通过关键字过滤文件行
-n：显示匹配行的行号
关键字：要过滤的关键字，建议用 "" 包围
path：被过滤的文件或文件夹
	grep -n "hello" test.txt

(2).wc
wc [-c -m -l -w] path.xxx

-c：字节数量
-m：字符数量
-l：统计行数
-w：统计单词数量
path.xxx：被统计的文件
	wc test.txt -> 行数、单词数量、字节数、文件名
	wc -c test.txt -> c、文件名
	
(3).管道符
|：将左边的结果作为右边的输入
	cat test.txt | grep hello
	cat test.txt | wc -l
	ls | grep "h" | grep "..."
可以嵌套，从左到右



9.19		第三天
1.第2章.12
(1).echo
echo "输出内容"

在命令行输出指定内容
当输出内容简短时可以省略 ""
	echo hello linux

(2).反引号 ` `
被包围的会作为命令执行
	echo `pwd`	：会执行pwd语句

(3).重定向符
	>	：将左侧命令结果	覆盖写入右侧文件
	>>	：将左侧命令结果	追加写入右侧文件
		echo "hello" > test.txt
		echo "linux" >> test.txt
		ls > test.txt

(4).tail
tail [-f -num] path

path：被跟踪的文件路径
-f：持续跟踪
-num：查看尾部多少行，默认10行
	
	tail test.txt
	tail -5 test.txt
	tail -f test.txt		Ctrl+c，停止追踪

2.第二章.13.vi编辑
vi：visual interface，文本编辑器
vim是vi的升级版
vim path.txt
	文件不存在：新建
	文件存在：编辑

模式：命令，输入，底线命令
	命令：快捷功能
	输入：文件编辑
	底线命令：保存、退出

	vim hello.txt

iao：命令 -> 输入		插入模式
	i键：当前光标位置		进入输入模式
	I键：当前行开头位置	进入输入模式
	a键：当前光标之后	进入输入模式
	A键：当前行结尾		进入输入模式
	o键：当前光标下一行	进入输入模式
	O键：当前光标上一行	进入输入模式
	
	Esc：输入 -> 命令

快捷命令
	k	：上
	h	：下
	h	：左
	l	：右
	0	：移动光标到当前行开头
	$	：移动光标到当前行结尾
	PgUp	：向上翻页
	PgDn	：向下翻页
	/	：进入搜索模式
		n	：向下继续搜索
		N	：向上继续搜索
	dd	：删除当前行
	ndd	：删除光标向下n行
	yy	：复制当前行
	nyy	：复制当前行向下n行
	p	：粘贴
	u	：撤销
	Ctrl+r	：反向撤销更改
	gg	：跳到第一行
	G	：跳到最后一行
	dG	：从当前行开始，向下全部删除
	dgg	：从当前行开始，向上全部删除
	d$	：从光标开始，向后删除到本行结尾
	d0	：从光标开始，向前删除到本行开头

: 冒号：命令 -> 底线命令
	w	：保存
	q	：退出
	q!	：强制退出
	wq	：保存并退出
	set nu	：显示行号
	set paste：设置粘贴模式，用于外部复制内容

回车	：结束运行


3.第三章.用户与权限
(1).root用户，超级管理员
拥有最大操作权限
切换root	

(2).su命令：切换账户
su [-] [用户名]

-：切换后是否加载环境变量
用户名：默认root
exit：返回上一个用户/ ctrl+d
	su - root
	输入密码

root切换其他用户不用密码

(3).sudo命令
sudo 其他命令
	临时赋予root授权
	需要为普通用户配置sudo认证

切换root，执行visudo，自动通过vi打开/etc/sudoers
user ALL=(ALL)	NOPASSWD: ALL
:wq



9.23		第四天
1.用户和用户组
只有root才能执行，权限管控分为用户级别和用户组级别

(1).创建用户组
groupadd 用户名
	groupadd test

(2).删除用户组
groupdel 用户名
	groupdel test

(3).创建用户
useradd [-g -d] 用户名

-g：指定用户组，
	不指定-g时：自动创建同名组并加入
	指定-g时：组必须存在
-d：指定用户HOME路径，默认为：/home/用户名
	useradd test -g itest -d /home/test2

(4).删除用户
userdel [-r] 用户名

-r：同时删除用户的HOME目录
	userdel -r test

(5).查看用户所在组
id [用户名]

默认查看自身
提供用户名：查看指定用户，(root权限可用

(6).修改用户所属组
usermod -aG 用户组 用户名
将指定用户加入指定用户组

(7).getent
getent passwd
查看系统有哪些用户
显示信息：
	用户名：密码(x)：用户ID：组ID：描述信息：HOME目录：执行终端(默认bash)

getent group
显示有哪些组
显示信息
	组名称：组认证(x)：组ID


2.查看权限控制信息
ls -l

(1).文件、文件夹的权限控制信息
	drwxr-xr-x

分为10个位置
第一个位置：-  d  l
	-：表示文件
	d：表示文件夹，
	l：表示软链接，link
后面：	二	三	四	所属用户权限
		五	六	七	所属用户组权限
		八	九	十	其他用户权限
		r/-	w/-	x/-
r	：可读，read
	可以查看文件夹内容，如ls命令
w	：可写，write
	在文件夹内：创建、删除、改名。。
x	：可执行，execute
	可以cd进入

(2).文件、文件夹所属用户
(3).文件、文件夹所属用户组

3.chmod命令
chmod [-R] 权限 文件/文件夹

-R：对文件夹内全部内容进行同样的操作
修改权限命令，仅限root或文件夹所属用户
user，group，other
	chmod u=rwx,g=rx,o=x hello.txt
	chmod -R u=rwx,g=rx,o=x Test
快捷修改：通过二进制，r=4，w=2，x=1，相加
	chmod 751 test.txt

4.chown命令
chown [-R] [用户] [:] [用户组] 文件/文件夹

-R：对文件夹内全部内容进行同样的操作
用户：修改文件或文件夹所属用户
用户组：修改文件或文件夹所属用户组
冒号：用于分隔用户和用户组，不加默认修改用户
	chown root hello.txt
	chown :root hello.txt
	chown -R user:root hello.txt


















































